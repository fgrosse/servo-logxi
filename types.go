//go:generate goldigen --in "types.yml" --out "types.go" --package logxi --function RegisterTypes --overwrite --nointeraction --MANUALLY_EDITED
package logxi

/*
 * NOTE TO FUTURE SELF:
 * Goldigen v0.9.9 has a bug that prevents it from removing not doing a self import if the package name
 * differs from the directory name. Therefore I had to edit this file.
 *
 * Best regards
 * Past me
 */

import "github.com/fgrosse/goldi"

// RegisterTypes registers all types that have been defined in the file "types.yml"
//
// DO NOT EDIT THIS FILE: it has been generated by goldigen v0.9.9.
// It is however good practice to put this file under version control.
// See https://github.com/fgrosse/goldi for what is going on here.
func RegisterTypes(types goldi.TypeRegistry) {
	types.RegisterAll(map[string]goldi.TypeFactory{
		"logger_provider":    goldi.NewAliasType("logxi.logger_provider"),
		"logxi.configurator": goldi.NewType(NewLoggerConfigurator, "%logxi.level%"),
		"logxi.logger_provider": goldi.NewConfiguredType(
			goldi.NewStructType(new(LoggerProvider)),
			"logxi.configurator", "Configure",
		),
	})
}
